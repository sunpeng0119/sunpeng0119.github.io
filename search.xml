<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[查看最繁忙的线程]]></title>
    <url>%2F2018%2F06%2F15%2F%E6%9F%A5%E7%9C%8B%E6%9C%80%E7%B9%81%E5%BF%99%E7%9A%84%E7%BA%BF%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[核心脚本利用java自带的jstack等功能查看某个进程下最占用CPU的线程，可以非常方便的去排查cpu百分百、load过高等问题。 1234567891011121314151617181920212223242526272829303132333435#!/bin/bash if [ $# -eq 0 ];then echo "./busy_thread.sh [pid] [num_of_top_busy_thread]" exit -1fi pid=$1jstack_cmd="" if [[ $JAVA_HOME != "" ]]; then jstack_cmd="$JAVA_HOME/bin/jstack"else r=`which jstack 2&gt;/dev/null` if [[ $r != "" ]]; then jstack_cmd=$r else echo "can not find jstack" exit -2 fifi #line=`top -H -o %CPU -b -n 1 -p $pid | sed '1,/^$/d' | grep -v $pid | awk 'NR==2'`top -H -b -n 1 -p $pid | sed '1,/^$/d' | sed '1d;/^$/d' | grep -v $pid | sort -nrk9 |awk '&#123;print $1" "$9&#125;' | head -"$2" &gt; .tid.tmp for i in `seq 1 $2`do line=`sed -n "$i"p .tid.tmp` tid_0x=`printf "%0x" $(echo "$line" | awk '&#123;print $1&#125;')` t_name=`jstack $pid | grep $tid_0x | awk -F '#' '&#123;print $1&#125;'` cpu=`echo "$line" | awk '&#123;print $2&#125;'` echo "cpu: $cpu %, thread_name: $t_name"done rm -r .tid.tmp 使用说明shell脚本，需要两个参数 pid 和 topN 1sh topn.sh pid n 持续查看使用watch命令如： 1watch -n 1 sh topn.sh]]></content>
      <categories>
        <category>脚本</category>
      </categories>
      <tags>
        <tag>thread</tag>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ThreadLocal详解]]></title>
    <url>%2F2018%2F06%2F04%2FThreadLocal%E8%AF%A6%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[TheadLoacl实现原理Thead整体结构示意图如下： TheadLoacl与内存泄露]]></content>
      <tags>
        <tag>threadlocal</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F05%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
